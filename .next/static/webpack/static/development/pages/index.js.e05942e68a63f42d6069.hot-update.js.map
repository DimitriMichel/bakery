{"version":3,"file":"static/webpack/static/development/pages/index.js.e05942e68a63f42d6069.hot-update.js","sources":["webpack:///./components/OurStory.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useInView, InView } from \"react-intersection-observer\";\nimport DatePicker from \"react-datepicker/\";\nimport setHours from \"date-fns/setSeconds\";\nimport setMinutes from \"date-fns/setMinutes\";\n\n/*Framer Motion*/\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  yAxisVariants,\n  xAxisVariants,\n  yAxisVariantsSlow,\n  yAxisVariantsSlower,\n  yAxisVariantsSlowest,\n  xAxisVariantsSlow\n} from \"../utils/animConfig\";\n\nexport const OurStory = props => {\n  const [startDate, setStartDate] = useState(\n    setHours(setMinutes(new Date(), 60), 17)\n  );\n  const [clicked, setClicked] = useState(false);\n\n  const [ref, inView, entry] = useInView({\n    /* Optional options */\n    threshold: 0\n  });\n  return (\n    <AnimatePresence>\n      <section id=\"OurStory\">\n        <a id=\"OurStory\"> </a>\n        <motion.div\n          className=\"container\"\n          initial=\"exit\"\n          animate=\"enter\"\n          exit=\"exit\"\n        >\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <InView triggerOnce={true}>\n                {({ inView, ref }) => (\n                  <div ref={ref}>\n                    <div>\n                      {inView ? (\n                        <motion.div\n                          variants={xAxisVariants}\n                          className=\"title-animation\"\n                        >\n                          <h5>Our Story</h5>\n                          <h2>Baking is Art & Science</h2>\n                        </motion.div>\n                      ) : (\n                        <div> </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </InView>\n              <motion.div\n                className=\"story-animation\"\n                initial=\"exit\"\n                animate=\"enter\"\n                exit=\"exit\"\n              >\n                <InView triggerOnce={true}>\n                  {({ inView, ref }) => (\n                    <div ref={ref}>\n                      <div>\n                        {inView ? (\n                          <motion.div variants={xAxisVariantsSlow}>\n                            <p>\n                              Dr. Alan Hirsch, a neurologist who studies\n                              olfactory-evoked nostalgia, has found that smells\n                              produced by baking have a particularly powerful\n                              effect on memory. In any baking recipe every\n                              ingredient has a purpose. For example, in a cake,\n                              flour gives the structure, eggs bind the\n                              ingredients, baking powder and baking soda make it\n                              rise, the melted fats like butter and oil make it\n                              less chewy, and sugar sweetens and keeps it moist.\n                            </p>\n                            <div className=\"quote\">\n                              <i>\"The absolute final word in dessert.\"</i> -{\" \"}\n                              <strong>Michael Harding</strong> (Master Baker)\n                            </div>\n                            <div className=\"reservation\">\n                              <div className=\"datepicker\">\n                                <DatePicker\n                                  selected={startDate}\n                                  onChange={date => setStartDate(date)}\n                                  showTimeSelect\n                                  minTime={setHours(\n                                    setMinutes(new Date(), 0),\n                                    17\n                                  )}\n                                  maxTime={setHours(\n                                    setMinutes(new Date(), 400),\n                                    20\n                                  )}\n                                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                  readOnly\n                                />\n                              </div>\n                              {!clicked ? (\n                                <div className=\"reservation-button\">\n                                  <a  onClick={() => setClicked(true)} className=\"res-btn\">Reserve</a>\n                                </div>\n                              ) : (\n                                <div className=\"reservation-button\">\n                                  <a onClick={() => setClicked(false)} className=\"res-btn confirmed\">Reserved</a>\n                                </div>\n                              )}\n                            </div>\n                          </motion.div>\n                        ) : (\n                          <div> </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </InView>\n              </motion.div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"video-image\"></div>\n            </div>\n          </div>\n        </motion.div>\n      </section>\n    </AnimatePresence>\n  );\n};\n\nexport default OurStory;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AAFA;AANA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAmBA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AAIA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlDA;AA2DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;;;;A","sourceRoot":""}