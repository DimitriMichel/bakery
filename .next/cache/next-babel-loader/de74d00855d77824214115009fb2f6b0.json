{"ast":null,"code":"var _jsxFileName = \"/Users/dimitripl/Documents/Project5/components/OurStory.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useInView, InView } from \"react-intersection-observer\";\nimport Modal from \"./ReservationModal\";\n/*Framer Motion*/\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { yAxisVariants, xAxisVariants, yAxisVariantsSlow, yAxisVariantsSlower, yAxisVariantsSlowest, xAxisVariantsSlow } from \"../utils/animConfig\";\nexport const OurStory = props => {\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n\n  const open = () => setShowModal(true);\n\n  const close = () => setShowModal(false);\n\n  const [ref, inView, entry] = useInView({\n    /* Optional options */\n    threshold: 0\n  });\n  return __jsx(AnimatePresence, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"section\", {\n    id: \"OurStory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    id: \"OurStory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" \"), __jsx(motion.div, {\n    className: \"container\",\n    initial: \"exit\",\n    animate: \"enter\",\n    exit: \"exit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(InView, {\n    triggerOnce: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, ({\n    inView,\n    ref\n  }) => __jsx(\"div\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, inView ? __jsx(motion.div, {\n    variants: xAxisVariants,\n    className: \"title-animation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Our Story\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Baking is Art & Science\")) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" \")))), __jsx(motion.div, {\n    className: \"story-animation\",\n    initial: \"exit\",\n    animate: \"enter\",\n    exit: \"exit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(InView, {\n    triggerOnce: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, ({\n    inView,\n    ref\n  }) => __jsx(\"div\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, inView ? __jsx(motion.div, {\n    variants: xAxisVariantsSlow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Dr. Alan Hirsch, a neurologist who studies olfactory-evoked nostalgia, has found that smells produced by baking have a particularly powerful effect on memory. In any baking recipe every ingredient has a purpose. For example, in a cake, flour gives the structure, eggs bind the ingredients, baking powder and baking soda make it rise, the melted fats like butter and oil make it less chewy, and sugar sweetens and keeps it moist. Any system can function only if all it's parts do their job. The same principle applies to baking.\"), __jsx(\"div\", {\n    className: \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\\"The absolute final word in dessert.\\\"\"), \" -\", \" \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Michael Harding\"), \" (Master Baker)\"), __jsx(\"a\", {\n    href: \"#\",\n    className: \"res-btn\",\n    onClick: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Reserve\"), __jsx(Modal, {\n    show: showModal,\n    onClose: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Here's some content for the modal\")) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" \")))))), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"video-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))))));\n};\nexport default OurStory;","map":{"version":3,"sources":["/Users/dimitripl/Documents/Project5/components/OurStory.js"],"names":["React","useState","useInView","InView","Modal","AnimatePresence","motion","yAxisVariants","xAxisVariants","yAxisVariantsSlow","yAxisVariantsSlower","yAxisVariantsSlowest","xAxisVariantsSlow","OurStory","props","showModal","setShowModal","open","close","ref","inView","entry","threshold"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,6BAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA;;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAwC,eAAxC;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,mBAJF,EAKEC,oBALF,EAKwBC,iBALxB,QAMO,qBANP;AAQA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMgB,IAAI,GAAG,MAAMD,YAAY,CAAC,IAAD,CAA/B;;AACA,QAAME,KAAK,GAAG,MAAMF,YAAY,CAAC,KAAD,CAAhC;;AAIA,QAAM,CAACG,GAAD,EAAMC,MAAN,EAAcC,KAAd,IAAuBnB,SAAS,CAAC;AACrC;AACAoB,IAAAA,SAAS,EAAE;AAF0B,GAAD,CAAtC;AAIA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,EAAE,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEF,IAAAA,MAAF;AAAUD,IAAAA;AAAV,GAAD,KACC;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,GACL,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,QAAQ,EAAEZ,aADZ;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALF,CADK,GASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVJ,CADF,CAFJ,CADF,EAoBE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEY,IAAAA,MAAF;AAAUD,IAAAA;AAAV,GAAD,KACC;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,GACL,MAAC,MAAD,CAAQ,GAAR;AAAa,IAAA,QAAQ,EAAER,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uhBADF,EAcE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,QACiD,GADjD,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,oBAdF,EAkBE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAEK,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF,EAqBE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,SAAb;AACO,IAAA,OAAO,EAAEG,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCArBF,CADK,GA4BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA7BJ,CADF,CAFJ,CANF,CApBF,CADF,EAoEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApEF,CANF,CAFF,CADF,CADF;AAsFD,CAjGM;AAmGP,eAAeL,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useInView, InView } from \"react-intersection-observer\";\nimport Modal from \"./ReservationModal\";\n/*Framer Motion*/\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  yAxisVariants,\n  xAxisVariants,\n  yAxisVariantsSlow,\n  yAxisVariantsSlower,\n  yAxisVariantsSlowest, xAxisVariantsSlow\n} from \"../utils/animConfig\";\n\nexport const OurStory = props => {\n  const [showModal, setShowModal] = useState(false);\n  const open = () => setShowModal(true);\n  const close = () => setShowModal(false);\n\n\n\n  const [ref, inView, entry] = useInView({\n    /* Optional options */\n    threshold: 0\n  });\n  return (\n    <AnimatePresence>\n      <section id=\"OurStory\">\n        <a id=\"OurStory\"> </a>\n        <motion.div\n          className=\"container\"\n          initial=\"exit\"\n          animate=\"enter\"\n          exit=\"exit\"\n        >\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <InView triggerOnce={true}>\n                {({ inView, ref }) => (\n                  <div ref={ref}>\n                    <div>\n                      {inView ? (\n                        <motion.div\n                          variants={xAxisVariants}\n                          className=\"title-animation\"\n                        >\n                          <h5>Our Story</h5>\n                          <h2>Baking is Art & Science</h2>\n                        </motion.div>\n                      ) : (\n                        <div> </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </InView>\n              <motion.div\n                className=\"story-animation\"\n                initial=\"exit\"\n                animate=\"enter\"\n                exit=\"exit\"\n              >\n                <InView triggerOnce={true}>\n                  {({ inView, ref }) => (\n                    <div ref={ref}>\n                      <div>\n                        {inView ? (\n                          <motion.div  variants={xAxisVariantsSlow}>\n                            <p>\n                              Dr. Alan Hirsch, a neurologist who studies\n                              olfactory-evoked nostalgia, has found that smells\n                              produced by baking have a particularly powerful\n                              effect on memory. In any baking recipe every\n                              ingredient has a purpose. For example, in a cake,\n                              flour gives the structure, eggs bind the\n                              ingredients, baking powder and baking soda make it\n                              rise, the melted fats like butter and oil make it\n                              less chewy, and sugar sweetens and keeps it moist.\n                              Any system can function only if all it's parts do\n                              their job. The same principle applies to baking.\n                            </p>\n                            <div className=\"quote\">\n                              <i>\"The absolute final word in dessert.\"</i> -{\" \"}\n                              <strong>Michael Harding</strong> (Master Baker)\n                            </div>\n                            <a href=\"#\" className=\"res-btn\" onClick={open}>\n                              Reserve\n                            </a>\n                            <Modal show={showModal}\n                                   onClose={close}>\n                              Here's some content for the modal\n                            </Modal>\n                          </motion.div>\n                        ) : (\n                          <div> </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </InView>\n              </motion.div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"video-image\"></div>\n            </div>\n          </div>\n        </motion.div>\n      </section>\n    </AnimatePresence>\n  );\n};\n\nexport default OurStory;\n"]},"metadata":{},"sourceType":"module"}